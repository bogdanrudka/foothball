buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }

    dependencies {
        classpath 'com.moowork.gradle:gradle-node-plugin:1.3.1'
    }
}

apply plugin: 'base'
apply plugin: 'com.moowork.node' // gradle-node-plugin

npm_run_build {
    // make sure the build task is executed only when appropriate files change
    inputs.files fileTree('public')
    inputs.files fileTree('src')

    inputs.file 'package.json'
    inputs.file 'package-lock.json'

    outputs.dir 'build'
}

task packageNpmApp(type: Zip) {
    dependsOn npm_run_build
    baseName 'npm-app'
    extension 'jar'
    destinationDir file("${projectDir}/build_packageNpmApp")
    from('build') {
        // optional path under which output will be visible in Java classpath, e.g. static resources path
        into 'static'
    }
}

configurations {
    npmResources
}

configurations.default.extendsFrom(configurations.npmResources)

artifacts {
    npmResources(packageNpmApp.archivePath) {
        builtBy packageNpmApp
        type 'jar'
    }
}

assemble.dependsOn packageNpmApp

String testsExecutedMarkerName = "${projectDir}/.tests.executed"

task test(type: NpmTask) {
    dependsOn assemble

    environment CI: 'true'

    args = ['run', 'test']

    inputs.files fileTree('src')
    inputs.file 'package.json'
    inputs.file 'package-lock.json'

    // allows easy triggering re-tests
    doLast {
        new File(testsExecutedMarkerName).text = 'delete this file to force re-execution JavaScript tests'
    }
    outputs.file testsExecutedMarkerName
}

check.dependsOn test

clean {
    delete packageNpmApp.archivePath
    delete testsExecutedMarkerName
}